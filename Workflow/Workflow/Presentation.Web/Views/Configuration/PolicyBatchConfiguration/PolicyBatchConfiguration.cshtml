@model Presentation.Web.Models.Configuration.PolicyBatchConfigurationViewModel
@using Domain.Enumerators;
@using Domain.Util.Extensions;
@{
    ViewBag.Title = "Index";
}
<div class="container-fluid screen-taker-appeal-table__query NavigationBlock PolicyBatchConfigurationSearch">
    <div class="row mb-4 header__title__with__buttom">
        <div class="col-9 header__text">
            <p class="title">Cadastro de <span>Lotes de Apólice</span></p>
            <p class="subtitle">Use os filtros para guiar uma consulta avançada</p>
        </div>
        <div class="col-3 text-right header__button">
            <button type="button" class="btn mat-focus-indicator button mat-button mat-button-base ng-star-inserted" onclick="PolicyBatchConfiguration.new()"><i class="fas fa-plus"></i>&nbsp;NOVO CADASTRO</button>
        </div>
    </div>
    <form id="formFilters" autocomplete="off" AutoCompleteType="Disabled">
        @Html.AntiForgeryToken()
        <div class="row mb-4 PolicyBatchConfigurationFilter container__form">
            <div class="col-md-3 form-group">
                <label>Tipo de lote</label>
                <select name="@Html.NameFor(x=> x.Filters.BatchType)" class="form-control mat-input-element mat-form-field-autofill-control SearchFilter">
                    <option value="">Todos</option>
                    @foreach (var item in EnumExtensions.ToList<PolicyBatchRenovationEnum>()) {
                        <option value="@item.Key">
                            @item.Value
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-3 form-group">
                <label>Status</label>
                <select name="@Html.NameFor(x=> x.Filters.Status)" class="form-control mat-input-element mat-form-field-autofill-control SearchFilter">
                    <option value="">Todos</option>
                    @foreach (var item in EnumExtensions.ToList<RecordStatusEnum>()) {
                        <option value="@item.Key">@item.Value</option>
                    }
                </select>
            </div>

            <div class="col-12">
                <button type="button" class="btn mat-focus-indicator button mat-raised-button mat-button-base" onclick="PolicyBatchConfiguration.search()">PESQUISAR</button>
                <button type="button" class="btn mat-focus-indicator button__white mat-raised-button mat-button-base" onclick="PolicyBatchConfiguration.clear()">LIMPAR BUSCA</button>
            </div>
        </div>
    </form>
    <div class="row PolicyBatchConfigurationResult" style="display: none;">
        <div class="col-12 header__title mb-3">
            <p class="title__semibold__orange">Resultado</p>
            <p class="subtitle"></p>
        </div>
        <div class="col-12">
            <div class="data__table" id="PolicyBatchConfigurationGridContainer">
                @{await Html.RenderPartialAsync("~/Views/Configuration/PolicyBatchConfiguration/PolicyBatchConfigurationGrid.cshtml", Model);}
            </div>
        </div>
    </div>
</div>
<div class="container-fluid screen-taker-appeal-table__query NavigationBlock PolicyBatchConfigurationData" style="display: none;">
    <div class="row mb-4 header__title__with__buttom">
        <div class="col-12 header__text">
            <p class="title">Cadastrar <span>Lote de Apólices</span></p>
            <p class="subtitle">Cadastre abaixo o lote de apólice</p>
        </div>
    </div>
    <form id="formData" autocomplete="off" AutoCompleteType="Disabled">
        @Html.AntiForgeryToken()
        <div class="row mb-4 container__form" id="PolicyBatchConfigurationDataContainer">
            @{await Html.RenderPartialAsync("~/Views/Configuration/PolicyBatchConfiguration/PolicyBatchConfigurationData.cshtml", Model);}
        </div>
    </form>
</div>
<div class="container-fluid screen-taker-appeal-table__query NavigationBlock PolicyBatchConfigurationMail" style="display: none;">
    <div class="row mb-4 header__title__with__buttom">
        <div class="col-9 header__text">
            <p class="title">Cadastrar <span>E-mails de Alerta</span></p>
            <p class="subtitle">Cadastre abaixo os e-mails de alerta</p>
        </div>
        <div class="col-3 text-right header__button">
            <button type="button" class="btn mat-focus-indicator button mat-button mat-button-base ng-star-inserted" onclick="PolicyBatchConfiguration.newMail()"><i class="fas fa-plus"></i>&nbsp;NOVO CADASTRO</button>
        </div>
    </div>
    <div class="row mb-4 container__form">
        <div class="col-12">
            <div class="data__table" id="PolicyBatchConfigurationMailGridContainer">
                @{await Html.RenderPartialAsync("~/Views/Configuration/PolicyBatchConfiguration/PolicyBatchConfigurationMailGrid.cshtml", Model);}
            </div>
        </div>
    </div>
    <div class="col-sm-12">
        <hr />
    </div>
    <div class="col-12">
        <button type="button" class="btn mat-focus-indicator button__white mat-raised-button mat-button-base" onclick="PolicyBatchConfiguration.backSearchResults()">CANCELAR</button>
    </div>
</div>
<div class="container-fluid screen-taker-appeal-table__query NavigationBlock PolicyBatchConfigurationMailData" style="display: none;">
    <div class="row mb-4 header__title__with__buttom">
        <div class="col-12 header__text">
            <p class="title">Cadastrar <span>E-mail de alerta</span></p>
            <p class="subtitle">Cadastre abaixo o e-mail de alerta</p>
        </div>
    </div>
    <form id="formMailData" autocomplete="off" AutoCompleteType="Disabled">
        @Html.AntiForgeryToken()
        <div class="row mb-4 container__form" id="PolicyBatchConfigurationMailDataContainer">
            @{await Html.RenderPartialAsync("~/Views/Configuration/PolicyBatchConfiguration/PolicyBatchConfigurationMailData.cshtml", Model);}
        </div>
    </form>
</div>
<script>
    $(document).ready(function () {
        format.initializeInputMasks('#formFilters');
        validationrules.init('#formFilters');
        PolicyBatchConfiguration.clear();
    });

    var PolicyBatchConfiguration = {

        search: function () {
            commons.postAndCallback('#formFilters', true, function (formValues) {
                $.ajax({
                    type: 'POST',
                    url: '/Configuration/PolicyBatchConfigurationGrid',
                    data: formValues,
                    dataType: 'html',
                    beforeSend: function () {
                        loading.show("Processando... por favor, aguarde...");
                    },
                    success: function (data) {
                        loading.hide();
                        $('#PolicyBatchConfigurationGridContainer').html(data);
                        $('.PolicyBatchConfigurationResult').show();
                        commons.scrollToElement('#PolicyBatchConfigurationGridContainer');
                    },
                    error: function (xhr) {
                        loading.hide();
                        messages.ajaxError(xhr);
                    }
                });
            });
        },

        clear: function () {
            $('.SearchFilter').val('');
            $('.PolicyBatchConfigurationResult').hide();
        },

        new: function () {
            $.ajax({
                type: 'POST',
                url: '/Configuration/PolicyBatchConfigurationData',
                data: {
                    'id': null,
                    'editable': true
                },
                dataType: 'html',
                beforeSend: function () {
                    loading.show("Processando... por favor, aguarde...");
                },
                success: function (data) {
                    loading.hide();
                    $('#PolicyBatchConfigurationDataContainer').html(data);
                    $('.NavigationBlock').hide();
                    $('.PolicyBatchConfigurationData').show();
                    commons.scrollToElement('#PolicyBatchConfigurationDataContainer');
                },
                error: function (xhr) {
                    loading.hide();
                    messages.ajaxError(xhr);
                }
            });
        },

        view: function (id) {
            $.ajax({
                type: 'POST',
                url: '/Configuration/PolicyBatchConfigurationData',
                data: {
                    'id': id,
                    'editable': false
                },
                dataType: 'html',
                beforeSend: function () {
                    loading.show("Processando... por favor, aguarde...");
                },
                success: function (data) {
                    loading.hide();
                    $('#PolicyBatchConfigurationDataContainer').html(data);
                    $('.PolicyBatchConfigurationSearch').hide();
                    $('.PolicyBatchConfigurationData').show();
                    commons.scrollToElement('#PolicyBatchConfigurationDataContainer');
                },
                error: function (xhr) {
                    loading.hide();
                    messages.ajaxError(xhr);
                }
            });
        },

        edit: function (id) {
            $.ajax({
                type: 'POST',
                url: '/Configuration/PolicyBatchConfigurationData',
                data: {
                    'id': id,
                    'editable': true
                },
                dataType: 'html',
                beforeSend: function () {
                    loading.show("Processando... por favor, aguarde...");
                },
                success: function (data) {
                    loading.hide();
                    $('#PolicyBatchConfigurationDataContainer').html(data);
                    $('.PolicyBatchConfigurationSearch').hide();
                    $('.PolicyBatchConfigurationData').show();
                    commons.scrollToElement('#PolicyBatchConfigurationDataContainer');
                },
                error: function (xhr) {
                    loading.hide();
                    messages.ajaxError(xhr);
                }
            });
        },

        save: function () {
            commons.postAndCallback('#formData', true, function (formValues) {
                $.ajax({
                    type: 'POST',
                    url: '/Configuration/PolicyBatchConfigurationSave',
                    data: formValues,
                    dataType: 'json',
                    beforeSend: function () {
                        loading.show("Processando... por favor, aguarde...");
                    },
                    success: function (data) {
                        loading.hide();
                        messages.info('Sucesso', 'Dados salvos com sucesso.');
                        $('#PolicyBatchConfigurationId').val(data.response.id);
                    },
                    error: function (xhr) {
                        loading.hide();
                        messages.ajaxError(xhr);
                    }
                });
            });
        },

        delete: function (id) {
            messages.confirm('Confirmação', 'Confirma a exclusão da configuração de lote?',
                function () {
                    $.ajax({
                        type: 'POST',
                        url: '/Configuration/PolicyBatchConfigurationDelete',
                        data: {
                            'id': id
                        },
                        dataType: 'json',
                        beforeSend: function () {
                            loading.show("Processando... por favor, aguarde...");
                        },
                        success: function (data) {
                            loading.hide();
                            messages.info('Sucesso', 'Configuração de lote excluída com sucesso!', function () { PolicyBatchConfiguration.search(); });
                        },
                        error: function (xhr) {
                            loading.hide();
                            messages.ajaxError(xhr);
                        }
                    });
                });
        },

        back: function () {
            $('.NavigationBlock').hide();
            $('.PolicyBatchConfigurationSearch').show();
        },

        searchMail: function (id) {
            $.ajax({
                type: 'POST',
                url: '/Configuration/PolicyBatchConfigurationMailGrid',
                data: {
                    'id': id
                },
                dataType: 'html',
                beforeSend: function () {
                    loading.show("Processando... por favor, aguarde...");
                },
                success: function (data) {
                    loading.hide();
                    $('#PolicyBatchConfigurationMailGridContainer').html(data);
                    $('.NavigationBlock').hide();
                    $('.PolicyBatchConfigurationMail').show();
                    commons.scrollToElement('#PolicyBatchConfigurationMailGridContainer');
                },
                error: function (xhr) {
                    loading.hide();
                    messages.ajaxError(xhr);
                }
            });
        },

        backSearchResults: function () {
            $('.NavigationBlock').hide();
            $('.PolicyBatchConfigurationSearch').show();
            $('.PolicyBatchConfigurationResult').show();
            commons.scrollToElement('#PolicyBatchConfigurationGridContainer');
        },

        newMail: function () {
            $.ajax({
                type: 'POST',
                url: '/Configuration/PolicyBatchConfigurationMailData',
                data: {
                    'policyBatchConfigurationId': $('#PolicyBatchConfigurationMailGridContainer .PolicyBatchConfigurationId').val(),
                    'policyBatchConfigurationMailId': null,
                    'editable': true
                },
                dataType: 'html',
                beforeSend: function () {
                    loading.show("Processando... por favor, aguarde...");
                },
                success: function (data) {
                    loading.hide();
                    $('#PolicyBatchConfigurationMailDataContainer').html(data);
                    $('.NavigationBlock').hide();
                    $('.PolicyBatchConfigurationMailData').show();
                    commons.scrollToElement('#PolicyBatchConfigurationMailDataContainer');
                },
                error: function (xhr) {
                    loading.hide();
                    messages.ajaxError(xhr);
                }
            });
        },

        viewMail: function (id) {
            $.ajax({
                type: 'POST',
                url: '/Configuration/PolicyBatchConfigurationMailData',
                data: {
                    'policyBatchConfigurationId': $('#PolicyBatchConfigurationMailGridContainer .PolicyBatchConfigurationId').val(),
                    'policyBatchConfigurationMailId': id,
                    'editable': false
                },
                dataType: 'html',
                beforeSend: function () {
                    loading.show("Processando... por favor, aguarde...");
                },
                success: function (data) {
                    loading.hide();
                    $('#PolicyBatchConfigurationMailDataContainer').html(data);
                    $('.NavigationBlock').hide();
                    $('.PolicyBatchConfigurationMailData').show();
                    commons.scrollToElement('#PolicyBatchConfigurationMailDataContainer');
                },
                error: function (xhr) {
                    loading.hide();
                    messages.ajaxError(xhr);
                }
            });
        },

        editMail: function (id) {
            $.ajax({
                type: 'POST',
                url: '/Configuration/PolicyBatchConfigurationMailData',
                data: {
                    'policyBatchConfigurationId': $('#PolicyBatchConfigurationMailGridContainer .PolicyBatchConfigurationId').val(),
                    'policyBatchConfigurationMailId': id,
                    'editable': true
                },
                dataType: 'html',
                beforeSend: function () {
                    loading.show("Processando... por favor, aguarde...");
                },
                success: function (data) {
                    loading.hide();
                    $('#PolicyBatchConfigurationMailDataContainer').html(data);
                    $('.NavigationBlock').hide();
                    $('.PolicyBatchConfigurationMailData').show();
                    commons.scrollToElement('#PolicyBatchConfigurationMailDataContainer');
                },
                error: function (xhr) {
                    loading.hide();
                    messages.ajaxError(xhr);
                }
            });
        },

        saveMail: function () {
            commons.postAndCallback('#formMailData', true, function (formValues) {
                $.ajax({
                    type: 'POST',
                    url: '/Configuration/PolicyBatchConfigurationMailSave',
                    data: formValues,
                    dataType: 'json',
                    beforeSend: function () {
                        loading.show("Processando... por favor, aguarde...");
                    },
                    success: function (data) {
                        loading.hide();
                        messages.info('Sucesso', 'Dados salvos com sucesso.');
                        $('#PolicyBatchConfigurationMailId').val(data.response.id);
                    },
                    error: function (xhr) {
                        loading.hide();
                        messages.ajaxError(xhr);
                    }
                });
            });
        },

        deleteMail: function (id) {
            messages.confirm('Confirmação', 'Confirma a exclusão do e-mail de alerta?',
                function () {
                    $.ajax({
                        type: 'POST',
                        url: '/Configuration/PolicyBatchConfigurationMailDelete',
                        data: {
                            'id': id
                        },
                        dataType: 'json',
                        beforeSend: function () {
                            loading.show("Processando... por favor, aguarde...");
                        },
                        success: function (data) {
                            loading.hide();
                            messages.info('Sucesso', 'E-mail de alerta excluído com sucesso!', function () { PolicyBatchConfiguration.searchMail($('#PolicyBatchConfigurationMailGridContainer .PolicyBatchConfigurationId').val()); });
                        },
                        error: function (xhr) {
                            loading.hide();
                            messages.ajaxError(xhr);
                        }
                    });
                });
        },

        backMailList: function () {
            PolicyBatchConfiguration.searchMail($('#PolicyBatchConfigurationMailGridContainer .PolicyBatchConfigurationId').val());
        },
    };

</script>
